AWSTemplateFormatVersion: "2010-09-09"
Description: "FreeAI Static Website Infrastructure (S3 + CloudFront + Route53)"

Resources:
  # S3 Bucket for website content (private)
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: freeai-xyz-website
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Purpose
          Value: "Static Website"

  # Bucket Policy to allow CloudFront OAI to access the bucket
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${WebsiteBucket}/*"

  # CloudFront Origin Access Identity
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "Origin Access Identity for ${WebsiteBucket}"

  # CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        Enabled: true
        DefaultRootObject: index.html
        HttpVersion: http2
        PriceClass: PriceClass_100
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          DefaultTTL: 86400 # 1 day
        ViewerCertificate:
          CloudFrontDefaultCertificate: false
          AcmCertificateArn: !Ref SSLCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Aliases:
          - freeai.xyz
          - www.freeai.xyz
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: /error.html

  # ACM Certificate for CloudFront (must be in us-east-1)
  SSLCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: freeai.xyz
      SubjectAlternativeNames:
        - www.freeai.xyz
      ValidationMethod: DNS

  # Route 53 Record Set for apex domain
  ApexDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: freeai.xyz.
      Name: freeai.xyz.
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFront hosted zone ID is always this value

  # Route 53 Record Set for www subdomain
  WwwDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: freeai.xyz.
      Name: www.freeai.xyz.
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFront hosted zone ID is always this value

Outputs:
  BucketName:
    Description: "S3 Bucket for website content"
    Value: !Ref WebsiteBucket

  CloudFrontDomainName:
    Description: "CloudFront Distribution Domain Name"
    Value: !GetAtt CloudFrontDistribution.DomainName

  CloudFrontDistributionId:
    Description: "CloudFront Distribution ID"
    Value: !Ref CloudFrontDistribution

  WebsiteURL:
    Description: "Website URL"
    Value: "https://freeai.xyz"

  S3UploadCommands:
    Description: "Commands to upload content to the S3 bucket"
    Value: !Sub "aws s3 sync ./submodules/landing/ s3://${WebsiteBucket}/"
